#pragma kernel CSMain
#pragma kernel CSInit

/*
Rules of the Game Of Life

1. Live cells with < 2 live neigbors dies.
2. Live cells with 2 or 3 live neighbors live.
3. Live cells with > 3 live neighbors dies.
4. Dead cells with 3 live neigbors becomes alive.
*/

RWTexture2D<float4> Input;
RWTexture2D<float4> Result;

unsigned int _Width, _Height;

float _Random;

float _ValueToBeAlive;

float rand(float2 co)
{
    return 0.5 + (frac(sin(dot(co.xy, float2(12.9898, _Random))) * 43758.5453)) * 0.5;
}

[numthreads(8, 8, 1)]
void CSInit(uint3 id : SV_DispatchThreadID)
{
    Result[id.xy] = rand(id.xy) > _ValueToBeAlive ? float4(1, 1, 1, 1) : float4(0, 0, 0, 1);
}


[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float4 neigborCells = float4(0, 0, 0, 1);
    
    // Test if negetive X or positive X is allowed
    bool negY = id.y != 0;
    bool posY = id.y != _Height;
    
    // Test if negetive Y or positive Y is allowed
    bool negX = id.x != 0;
    bool posX = id.x != _Width;
    
    if (negY)
    {
        if (negX)
            neigborCells += Input[id.xy + float2(-1, -1)];  // Bottom Left
        
        neigborCells += Input[id.xy + float2(0, -1)];       // Bottom Middle
        
        if (posX)
            neigborCells += Input[id.xy + float2(1, -1)];   // Bottom Right
    }
    
    if (negX)
        neigborCells += Input[id.xy + float2(-1,  0)];      // Left
    
    if (posX)
        neigborCells += Input[id.xy + float2( 1,  0)];      // Right
    
    if (posY)
    {
        if (negX)
            neigborCells += Input[id.xy + float2(-1, 1)];   // Top Left
        
        neigborCells += Input[id.xy + float2(0, 1)];        // Top Middle
        
        if (posX)
            neigborCells += Input[id.xy + float2(1, 1)];    // Top Right
    }
    
    // Get the alive neigbor cells
    int aliveCells = (int) neigborCells.r;
    
    // Check if current cell is alive
    if (Input[id.xy].r > 0.5)
    {
        // neigbor cells = 2 or = 3
        Result[id.xy] = (aliveCells == 2 || aliveCells == 3) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 1);
    }
    else
    {
        // neigbor cells = 3
        Result[id.xy] = (aliveCells == 3) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 1);
    }
}