#pragma kernel GameOfLife

RWTexture2D<float4> Input;
RWTexture2D<float4> Result;

uniform int Width, Height;

[numthreads(8, 8, 1)]
void GameOfLife(uint3 id : SV_DispatchThreadID)
{
    /*
    float2 position = float2((id.x) / Width, (id.y) / Height);
    float2 pixelSize = float2(1.0 / Width, 1.0 / Height);

    float currentCell = tex2Dlod(_CellPrevious, float4(position.x, position.y, 0, 0)).r;

    float neighborCells = 0.0f;
	// +Y
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x + pixelSize.x, position.y + pixelSize.y, 0, 0)).r;
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x, position.y + pixelSize.y, 0, 0)).r;
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x - pixelSize.x, position.y + pixelSize.y, 0, 0)).r;
	// Neutral Y
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x + pixelSize.x, position.y, 0, 0)).r;
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x - pixelSize.x, position.y, 0, 0)).r;
	// -Y
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x + pixelSize.x, position.y - pixelSize.y, 0, 0)).r;
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x, position.y - pixelSize.y, 0, 0)).r;
    neighborCells += tex2Dlod(_CellPrevious, float4(position.x - pixelSize.x, position.y - pixelSize.y, 0, 0)).r;

    if (currentCell > 0.5)
    {
        if (neighborCells > 1.5 && neighborCells < 3.5) // == 2 || == 3
        {
            _CellNew[position.xy] = float4(1, 1, 1, 1);
        }
        else
        {
            _CellNew[position.xy] = float4(0, 0, 0, 1);
        }
    }
    else
    {
        if (neighborCells > 2.5 && neighborCells < 3.5) // == 3
        {
            _CellNew[position.xy] = float4(1, 1, 1, 1);
        }
        else
        {
            _CellNew[position.xy] = float4(0, 0, 0, 1);
        }
    }
    */
    
    int sum = 0;
    
    sum += Input[id.xy + float2(-1, -1)].r; // Bottom Left
    sum += Input[id.xy + float2( 0, -1)].r; // Bottom Middle
    sum += Input[id.xy + float2( 1, -1)].r; // Bottom Right
    
    sum += Input[id.xy + float2(-1,  0)].r; // Left
    sum += Input[id.xy + float2( 1,  0)].r; // Right
    
    sum += Input[id.xy + float2(-1,  1)].r; // Top Left
    sum += Input[id.xy + float2( 0,  1)].r; // Top Middle
    sum += Input[id.xy + float2( 1,  1)].r; // Top Right
    
    if (Input[id.xy].r > 0)
    {
        Result[id.xy] = (sum == 2 || sum == 3) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 1);
    }
    else
    {
        Result[id.xy] = (sum == 3) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 1);
    }
}